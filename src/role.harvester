var roleHarvester = {
    
    run: function(creep) {
        if (creep.memory.working && creep.carry.energy == 0) {
            creep.memory.working = false;
//            creep.memory.job = false;
            creep.say('harvest');
        }
        
        if (!creep.memory.working && creep.carry.energy == creep.carryCapacity) {
            creep.memory.working = true;
//            creep.memory.job = false;
            creep.say('deliver');
        }
        
        if (creep.memory.working) {
            var allStructuresInRoom = creep.room.find(FIND_STRUCTURES);
            
            var spawns = _.filter(allStructuresInRoom, (structure) => (structure.structureType == STRUCTURE_SPAWN && structure.energy < structure.energyCapacity));
            var extensions = _.filter(allStructuresInRoom, (structure) => (structure.structureType == STRUCTURE_EXTENSION && structure.energy < structure.energyCapacity));
            
                
            if (!creep.memory.job) {
                
                if (spawns.length) {
                    creep.memory.job = spawns[0].id;
                } else if (extensions.length) {
                    creep.memory.job = extensions[0].id;
                } else if (creep.room.storage) {
                    creep.memory.job = creep.room.storage.id;
                }
                
            }
            
            if (creep.memory.job) {
                if (Game.getObjectById(creep.memory.job).energy == Game.getObjectById(creep.memory.job).energyCapacity) {
                    delete creep.memory.job;
                }
            }
            
            if (creep.transfer(Game.getObjectById(creep.memory.job), RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {
                    creep.moveTo(Game.getObjectById(creep.memory.job));
            } else {
                delete creep.memory.job;
            }
            
        } else {
            if (!creep.memory.mySource) {
                creep.memory.mySource = Math.floor(Math.random() * 2);
                console.log(creep.memory.mySource);
            }
            
            var source = creep.room.find(FIND_SOURCES);
            
            if (creep.harvest(source[0]) == ERR_NOT_IN_RANGE) {
                creep.moveTo(source[0]);
            }
            
        }
        
        var allCreepsInRoom = creep.room.find(FIND_MY_CREEPS);
        
        var numTransfers = _.sum(allCreepsInRoom, (creep) => creep.memory.role == 'transfer');
        var numMiners = _.sum(allCreepsInRoom, (creep) => creep.memory.role == 'miner');
        
        if (numTransfers > 0 && numMiners > 0) {
            creep.memory.role = 'builder';
            //console.log(creep.name+' converted from a harvester to a builder.');
        };
        
        if (creep.ticksToLive < 60) {
            creep.say(creep.ticksToLive);
        }
        
        if (creep.ticksToLive < 60 && creep.carry.energy == 0) {
            creep.say("Woe is me!");
            creep.suicide();
        }
    }
}

module.exports = roleHarvester;
